<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 addedToStage="group1_addedToStageHandler(event)" currentState="shrink_empty">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import spark.core.NavigationUnit;
			
			public var maxHistory:int=10;
//			[Bindable]
//			public var isEmpty:Boolean=true;
			
			[Bindable]
			private var history:ArrayCollection=new ArrayCollection();
			
			public function speakText(name:String,text:String):void{
				var msg:Msg=new Msg(true);
				msg.name=name;
				msg.text=text;
				
				addItem(msg);
			}
			
			public function speakVoice(name:String,time:int,mc5:String):void{
				var msg:Msg=new Msg(false);
				msg.name=name;
				msg.time=time;
				msg.mc5=mc5;
				
				addItem(msg);
			}
			
			private function addItem(msg:Msg):void{
				
				if(currentState=="shrink_empty")
					currentState="expand";
				else if(currentState=="shrink_old")
					currentState="shrink_new";
				
				history.addItemAt(msg,0);
				
				if(history.length>maxHistory){
					history.removeItemAt(history.length-1);
				}
				
//				scrollToBottom();
			}
			
			public function clear():void{
				history.removeAll();
				currentState="shrink_empty";
//				isEmpty=true;
			}
			
//			private function scrollToBottom():void {
//				var delta:Number = 0;
//				var count:int = 0;
//				while (count++ < 10){
//					validateNow();
//					delta = layout.getVerticalScrollPositionDelta(NavigationUnit.END);
//					layout.verticalScrollPosition += delta;
//					
//					if (delta == 0)
//						break;
//				}
//			}
			
			protected function group1_addedToStageHandler(event:Event):void
			{
				maxWidth=stage.stageWidth/2;
			}
			
			protected function btnEmpty_clickHandler(event:MouseEvent):void
			{
				if(currentState=="shrink_empty"){
					
				}else if(currentState=="shrink_old"){
					currentState="expand";
				}else if(currentState=="shrink_new"){
					currentState="expand";
				}else if(currentState=="expand"){
					currentState="shrink_old";
				}
			}
			
		]]>
	</fx:Script>
	<fx:Metadata> 
		[Event(name="VOICE", type="azura.common.ui.chat.MsgEvent")] 
	</fx:Metadata> 
	<s:states>
		<s:State name="shrink_empty"/>
		<s:State name="shrink_old"/>
		<s:State name="shrink_new"/>
		<s:State name="expand"/>
	</s:states>
	<s:Image id="btnEmpty" includeIn="expand,shrink_new,shrink_old" left="0" top="0" width="48"
			 height="48" click="btnEmpty_clickHandler(event)" mouseDown="event.stopPropagation()"
			 mouseUp="event.stopPropagation()"
			 source.expand="@Embed('assets/btn_minus.png')"
			 source.shrink_new="@Embed('assets/btn_plus_red.png')"
			 source.shrink_old="@Embed('assets/btn_plus.png')"/>
	<s:List id="list" includeIn="expand" x="48" y="0" width="100%" height="100%"
			borderVisible="false" contentBackgroundAlpha="0.0" dataProvider="{history}"
			fontSize="24" itemRenderer="azura.common.ui.chat.MsgRenderer"
			skinClass="azura.common.ui.chat.skins.LeftListSkin">
		<s:layout>
			<s:VerticalLayout gap="8" horizontalAlign="justify" variableRowHeight="true">
			</s:VerticalLayout>
		</s:layout>
	</s:List>
</s:Group>