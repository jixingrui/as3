<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:ui="common.ui.*"
		 xmlns:editor="azura.banshee.editor.zebra.editor.*"
		 xmlns:zebra="azura.banshee.editor.zebra.*"
		 xmlns:file="azura.common.ui.file.*"
		 xmlns:ui1="azura.common.ui.*"
		 xmlns:label="azura.common.ui.label.*"
		 xmlns:ns="http://flex.apache.org/experimental/ns"
		 width="100%" height="100%" implements="azura.banshee.zbox3.editor.PageI3">
	<fx:Script>
		<![CDATA[
			import azura.banshee.zebra.Zebra3;
			import azura.banshee.zebra.Zfont;
			import azura.banshee.zebra.branch.ZHline2;
			import azura.banshee.zebra.branch.Zmatrix2;
			import azura.common.collections.ZintBuffer;
			import azura.common.util.FileUtil;
			import azura.gallerid4.Gal4;
			import azura.gallerid4.GalPack4;
			
			import mx.events.ColorPickerEvent;
			
			import spark.events.IndexChangeEvent;
			
			import starling.utils.Color;
			
			public var canvas:ZebraTextCanvas=new ZebraTextCanvas();
			
			[Bindable]
			private var zfont:Zfont=new Zfont();
			
			public function activate(ec:EditorCanvas3):void{
				canvas.activate(ec);
				zfont.text="Sample Text";
				show();
			}
			
			public function deactivate():void{
				canvas.deactivate();
			}
			
			private function show():void{
				canvas.showText(zfont);
			}
			
			protected function fbZfont_READYHandler(event:Event):void
			{
				var zb:ZintBuffer=FileUtil.read(fbZfont.file);
				zfont.fromBytes(zb);
				show();
			}
			
			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				var frr:FileReference=new FileReference();
				frr.save(zfont.toBytes(),".zfont");
			}
			
			protected function lsText_changeHandler(event:Event):void
			{
				zfont.text=lsText.string;
				show();
			}
			
			protected function cpText_changeHandler(event:ColorPickerEvent):void
			{
				zfont.color=cpText.selectedColor;
				show();
			}
			
			protected function cpGlow_changeHandler(event:ColorPickerEvent):void
			{
				zfont.glowColor=cpGlow.selectedColor;
				show();
			}
			
			protected function lsGlow_changeHandler(event:Event):void
			{
				zfont.glowStrength=lsGlow.number;
				show();
			}
			
			protected function lnSize_changeHandler(event:Event):void
			{
				zfont.size=lnSize.number;
				show();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!--	<s:SpriteVisualElement id="holder"/>-->
	<s:VGroup x="10" y="50" color="{Color.WHITE}">		
		<s:HGroup color="{Color.BLACK}">
			<file:FileButton6 id="fbZfont" label="读取.zfont" _ext="*.zfont"
							  READY="fbZfont_READYHandler(event)"/>
			<s:Button id="btnSave" label="保存.zfont" click="btnSave_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup>
			<mx:ColorPicker id="cpText" change="cpText_changeHandler(event)"
							selectedColor="{zfont.color}"/>
			<label:LabelString2 id="lsText" label="text=" change="lsText_changeHandler(event)"
								string="{zfont.text}"/>
		</s:HGroup>
		<label:LabelNumber2 id="lnSize" label="size=" change="lnSize_changeHandler(event)" max="1024"
							min="4" number="{zfont.size}"/>
		<s:HGroup>
			<mx:ColorPicker id="cpGlow" change="cpGlow_changeHandler(event)"
							selectedColor="{zfont.glowColor}"/>
			<label:LabelNumber2 id="lsGlow" label="glow=" change="lsGlow_changeHandler(event)"
								number="{zfont.glowStrength}"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>
